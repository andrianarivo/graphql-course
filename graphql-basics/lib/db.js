"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const users = [{
  id: '1',
  name: 'Andrew',
  email: 'andrew@example.com',
  age: 27,
  posts: [],
  comments: []
}, {
  id: '2',
  name: 'Sarah',
  email: 'sarah@example.com',
  posts: [],
  comments: []
}, {
  id: '3',
  name: 'Mike',
  email: 'mike@example.com',
  posts: [],
  comments: []
}];
let posts = [{
  id: '10',
  title: 'GraphQL 101',
  body: 'This is how to use GraphQL...',
  published: true,
  // @ts-ignore
  author: '1'
}, {
  id: '11',
  title: 'GraphQL 201',
  body: 'This is an advanced GraphQL post...',
  published: true,
  // @ts-ignore
  author: '1'
}, {
  id: '12',
  title: 'Programming Music',
  body: '',
  published: false,
  // @ts-ignore
  author: '3'
}];
let comments = [{
  id: '102',
  text: 'This worked well for me. Thanks!',
  // @ts-ignore
  author: '3',
  // @ts-ignore
  post: '10'
}, {
  id: '103',
  text: 'Glad you enjoyed it.',
  // @ts-ignore
  author: '1',
  // @ts-ignore
  post: '10'
}, {
  id: '104',
  text: 'This did not work.',
  // @ts-ignore
  author: '2',
  // @ts-ignore
  post: '11'
}, {
  id: '105',
  text: 'Nevermind. I got it to work.',
  // @ts-ignore
  author: '1',
  // @ts-ignore
  post: '11'
}];
const db = {
  users,
  posts,
  comments
};
var _default = exports.default = db;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VycyIsImlkIiwibmFtZSIsImVtYWlsIiwiYWdlIiwicG9zdHMiLCJjb21tZW50cyIsInRpdGxlIiwiYm9keSIsInB1Ymxpc2hlZCIsImF1dGhvciIsInRleHQiLCJwb3N0IiwiZGIiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vc3JjL2RiLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tbWVudCwgUG9zdCwgVXNlcn0gZnJvbSAnLi9nZW5lcmF0ZWQvZ3JhcGhxbCdcblxuY29uc3QgdXNlcnM6IFVzZXJbXSA9IFtcbiAge1xuICAgIGlkOiAnMScsXG4gICAgbmFtZTogJ0FuZHJldycsXG4gICAgZW1haWw6ICdhbmRyZXdAZXhhbXBsZS5jb20nLFxuICAgIGFnZTogMjcsXG4gICAgcG9zdHM6IFtdLFxuICAgIGNvbW1lbnRzOiBbXVxuICB9LFxuICB7XG4gICAgaWQ6ICcyJyxcbiAgICBuYW1lOiAnU2FyYWgnLFxuICAgIGVtYWlsOiAnc2FyYWhAZXhhbXBsZS5jb20nLFxuICAgIHBvc3RzOiBbXSxcbiAgICBjb21tZW50czogW11cbiAgfSxcbiAge1xuICAgIGlkOiAnMycsXG4gICAgbmFtZTogJ01pa2UnLFxuICAgIGVtYWlsOiAnbWlrZUBleGFtcGxlLmNvbScsXG4gICAgcG9zdHM6IFtdLFxuICAgIGNvbW1lbnRzOiBbXVxuICB9XG5dXG5sZXQgcG9zdHM6IFBvc3RbXSA9IFtcbiAge1xuICAgIGlkOiAnMTAnLFxuICAgIHRpdGxlOiAnR3JhcGhRTCAxMDEnLFxuICAgIGJvZHk6ICdUaGlzIGlzIGhvdyB0byB1c2UgR3JhcGhRTC4uLicsXG4gICAgcHVibGlzaGVkOiB0cnVlLFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBhdXRob3I6ICcxJ1xuICB9LFxuICB7XG4gICAgaWQ6ICcxMScsXG4gICAgdGl0bGU6ICdHcmFwaFFMIDIwMScsXG4gICAgYm9keTogJ1RoaXMgaXMgYW4gYWR2YW5jZWQgR3JhcGhRTCBwb3N0Li4uJyxcbiAgICBwdWJsaXNoZWQ6IHRydWUsXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGF1dGhvcjogJzEnXG4gIH0sXG4gIHtcbiAgICBpZDogJzEyJyxcbiAgICB0aXRsZTogJ1Byb2dyYW1taW5nIE11c2ljJyxcbiAgICBib2R5OiAnJyxcbiAgICBwdWJsaXNoZWQ6IGZhbHNlLFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBhdXRob3I6ICczJ1xuICB9XG5dXG5sZXQgY29tbWVudHM6IENvbW1lbnRbXSA9IFtcbiAge1xuICAgIGlkOiAnMTAyJyxcbiAgICB0ZXh0OiAnVGhpcyB3b3JrZWQgd2VsbCBmb3IgbWUuIFRoYW5rcyEnLFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBhdXRob3I6ICczJyxcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcG9zdDogJzEwJyxcbiAgfSxcbiAge1xuICAgIGlkOiAnMTAzJyxcbiAgICB0ZXh0OiAnR2xhZCB5b3UgZW5qb3llZCBpdC4nLFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBhdXRob3I6ICcxJyxcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcG9zdDogJzEwJyxcbiAgfSxcbiAge1xuICAgIGlkOiAnMTA0JyxcbiAgICB0ZXh0OiAnVGhpcyBkaWQgbm90IHdvcmsuJyxcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgYXV0aG9yOiAnMicsXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHBvc3Q6ICcxMSdcbiAgfSxcbiAge1xuICAgIGlkOiAnMTA1JyxcbiAgICB0ZXh0OiAnTmV2ZXJtaW5kLiBJIGdvdCBpdCB0byB3b3JrLicsXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGF1dGhvcjogJzEnLFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBwb3N0OiAnMTEnXG4gIH1cbl1cblxuY29uc3QgZGIgPSB7XG4gIHVzZXJzLFxuICBwb3N0cyxcbiAgY29tbWVudHNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLE1BQU1BLEtBQWEsR0FBRyxDQUNwQjtFQUNFQyxFQUFFLEVBQUUsR0FBRztFQUNQQyxJQUFJLEVBQUUsUUFBUTtFQUNkQyxLQUFLLEVBQUUsb0JBQW9CO0VBQzNCQyxHQUFHLEVBQUUsRUFBRTtFQUNQQyxLQUFLLEVBQUUsRUFBRTtFQUNUQyxRQUFRLEVBQUU7QUFDWixDQUFDLEVBQ0Q7RUFDRUwsRUFBRSxFQUFFLEdBQUc7RUFDUEMsSUFBSSxFQUFFLE9BQU87RUFDYkMsS0FBSyxFQUFFLG1CQUFtQjtFQUMxQkUsS0FBSyxFQUFFLEVBQUU7RUFDVEMsUUFBUSxFQUFFO0FBQ1osQ0FBQyxFQUNEO0VBQ0VMLEVBQUUsRUFBRSxHQUFHO0VBQ1BDLElBQUksRUFBRSxNQUFNO0VBQ1pDLEtBQUssRUFBRSxrQkFBa0I7RUFDekJFLEtBQUssRUFBRSxFQUFFO0VBQ1RDLFFBQVEsRUFBRTtBQUNaLENBQUMsQ0FDRjtBQUNELElBQUlELEtBQWEsR0FBRyxDQUNsQjtFQUNFSixFQUFFLEVBQUUsSUFBSTtFQUNSTSxLQUFLLEVBQUUsYUFBYTtFQUNwQkMsSUFBSSxFQUFFLCtCQUErQjtFQUNyQ0MsU0FBUyxFQUFFLElBQUk7RUFDZjtFQUNBQyxNQUFNLEVBQUU7QUFDVixDQUFDLEVBQ0Q7RUFDRVQsRUFBRSxFQUFFLElBQUk7RUFDUk0sS0FBSyxFQUFFLGFBQWE7RUFDcEJDLElBQUksRUFBRSxxQ0FBcUM7RUFDM0NDLFNBQVMsRUFBRSxJQUFJO0VBQ2Y7RUFDQUMsTUFBTSxFQUFFO0FBQ1YsQ0FBQyxFQUNEO0VBQ0VULEVBQUUsRUFBRSxJQUFJO0VBQ1JNLEtBQUssRUFBRSxtQkFBbUI7RUFDMUJDLElBQUksRUFBRSxFQUFFO0VBQ1JDLFNBQVMsRUFBRSxLQUFLO0VBQ2hCO0VBQ0FDLE1BQU0sRUFBRTtBQUNWLENBQUMsQ0FDRjtBQUNELElBQUlKLFFBQW1CLEdBQUcsQ0FDeEI7RUFDRUwsRUFBRSxFQUFFLEtBQUs7RUFDVFUsSUFBSSxFQUFFLGtDQUFrQztFQUN4QztFQUNBRCxNQUFNLEVBQUUsR0FBRztFQUNYO0VBQ0FFLElBQUksRUFBRTtBQUNSLENBQUMsRUFDRDtFQUNFWCxFQUFFLEVBQUUsS0FBSztFQUNUVSxJQUFJLEVBQUUsc0JBQXNCO0VBQzVCO0VBQ0FELE1BQU0sRUFBRSxHQUFHO0VBQ1g7RUFDQUUsSUFBSSxFQUFFO0FBQ1IsQ0FBQyxFQUNEO0VBQ0VYLEVBQUUsRUFBRSxLQUFLO0VBQ1RVLElBQUksRUFBRSxvQkFBb0I7RUFDMUI7RUFDQUQsTUFBTSxFQUFFLEdBQUc7RUFDWDtFQUNBRSxJQUFJLEVBQUU7QUFDUixDQUFDLEVBQ0Q7RUFDRVgsRUFBRSxFQUFFLEtBQUs7RUFDVFUsSUFBSSxFQUFFLDhCQUE4QjtFQUNwQztFQUNBRCxNQUFNLEVBQUUsR0FBRztFQUNYO0VBQ0FFLElBQUksRUFBRTtBQUNSLENBQUMsQ0FDRjtBQUVELE1BQU1DLEVBQUUsR0FBRztFQUNUYixLQUFLO0VBQ0xLLEtBQUs7RUFDTEM7QUFDRixDQUFDO0FBQUEsSUFBQVEsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFY0gsRUFBRSJ9