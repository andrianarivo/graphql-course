"use strict";

var _graphqlYoga = require("graphql-yoga");
var _http = require("http");
var _loadFiles = require("@graphql-tools/load-files");
var _db = _interopRequireDefault(require("./db"));
var _Query = _interopRequireDefault(require("./resolvers/Query"));
var _Mutation = _interopRequireDefault(require("./resolvers/Mutation"));
var _Comment = _interopRequireDefault(require("./resolvers/Comment"));
var _User = _interopRequireDefault(require("./resolvers/User"));
var _Post = _interopRequireDefault(require("./resolvers/Post"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
async function main() {
  const typeDefs = await (0, _loadFiles.loadFiles)('**/*.graphql');
  const resolvers = {
    Query: _Query.default,
    Mutation: _Mutation.default,
    Post: _Post.default,
    User: _User.default,
    Comment: _Comment.default
  };
  const schema = (0, _graphqlYoga.createSchema)({
    typeDefs,
    resolvers
  });
  const yoga = (0, _graphqlYoga.createYoga)({
    schema,
    context: {
      db: _db.default
    }
  });
  const server = (0, _http.createServer)(yoga);
  server.listen(4000, () => {
    console.info('Server is running on http://localhost:4000/graphql');
  });
}
main().catch(err => {
  console.error(err);
  process.exit(1);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ3JhcGhxbFlvZ2EiLCJyZXF1aXJlIiwiX2h0dHAiLCJfbG9hZEZpbGVzIiwiX2RiIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9RdWVyeSIsIl9NdXRhdGlvbiIsIl9Db21tZW50IiwiX1VzZXIiLCJfUG9zdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwibWFpbiIsInR5cGVEZWZzIiwibG9hZEZpbGVzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJNdXRhdGlvbiIsIlBvc3QiLCJVc2VyIiwiQ29tbWVudCIsInNjaGVtYSIsImNyZWF0ZVNjaGVtYSIsInlvZ2EiLCJjcmVhdGVZb2dhIiwiY29udGV4dCIsImRiIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImluZm8iLCJjYXRjaCIsImVyciIsImVycm9yIiwicHJvY2VzcyIsImV4aXQiXSwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVTY2hlbWEsIGNyZWF0ZVlvZ2F9IGZyb20gJ2dyYXBocWwteW9nYSdcbmltcG9ydCB7Y3JlYXRlU2VydmVyfSBmcm9tICdodHRwJ1xuaW1wb3J0IHtsb2FkRmlsZXN9IGZyb20gXCJAZ3JhcGhxbC10b29scy9sb2FkLWZpbGVzXCJcbmltcG9ydCBkYiBmcm9tIFwiLi9kYlwiXG5pbXBvcnQgUXVlcnkgZnJvbSBcIi4vcmVzb2x2ZXJzL1F1ZXJ5XCJcbmltcG9ydCBNdXRhdGlvbiBmcm9tIFwiLi9yZXNvbHZlcnMvTXV0YXRpb25cIlxuaW1wb3J0IENvbW1lbnQgZnJvbSBcIi4vcmVzb2x2ZXJzL0NvbW1lbnRcIlxuaW1wb3J0IFVzZXIgZnJvbSBcIi4vcmVzb2x2ZXJzL1VzZXJcIlxuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcmVzb2x2ZXJzL1Bvc3RcIlxuaW1wb3J0IHsgUmVzb2x2ZXJzIH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2dyYXBocWxcIlxuXG5hc3luYyBmdW5jdGlvbiBtYWluKCkge1xuXG4gIGNvbnN0IHR5cGVEZWZzID0gYXdhaXQgbG9hZEZpbGVzKCcqKi8qLmdyYXBocWwnKVxuXG4gIGNvbnN0IHJlc29sdmVyczogUmVzb2x2ZXJzID0ge1xuICAgIFF1ZXJ5LFxuICAgIE11dGF0aW9uLFxuICAgIFBvc3QsXG4gICAgVXNlcixcbiAgICBDb21tZW50XG4gIH1cblxuICBjb25zdCBzY2hlbWEgPSBjcmVhdGVTY2hlbWEoe1xuICAgIHR5cGVEZWZzLFxuICAgIHJlc29sdmVycyxcbiAgfSlcblxuICBjb25zdCB5b2dhID0gY3JlYXRlWW9nYSh7IHNjaGVtYSwgY29udGV4dDogeyBkYiB9IH0pXG5cbiAgY29uc3Qgc2VydmVyID0gY3JlYXRlU2VydmVyKHlvZ2EpXG5cbiAgc2VydmVyLmxpc3Rlbig0MDAwLCAoKSA9PiB7XG4gICAgY29uc29sZS5pbmZvKCdTZXJ2ZXIgaXMgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OjQwMDAvZ3JhcGhxbCcpXG4gIH0pXG59XG5cbm1haW4oKS5jYXRjaCgoZXJyKSA9PiB7XG4gIGNvbnNvbGUuZXJyb3IoZXJyKVxuICBwcm9jZXNzLmV4aXQoMSlcbn0pIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFVBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLEdBQUEsR0FBQUMsc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFLLE1BQUEsR0FBQUQsc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFNLFNBQUEsR0FBQUYsc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFPLFFBQUEsR0FBQUgsc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFRLEtBQUEsR0FBQUosc0JBQUEsQ0FBQUosT0FBQTtBQUNBLElBQUFTLEtBQUEsR0FBQUwsc0JBQUEsQ0FBQUosT0FBQTtBQUFtQyxTQUFBSSx1QkFBQU0sR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUduQyxlQUFlRyxJQUFJQSxDQUFBLEVBQUc7RUFFcEIsTUFBTUMsUUFBUSxHQUFHLE1BQU0sSUFBQUMsb0JBQVMsRUFBQyxjQUFjLENBQUM7RUFFaEQsTUFBTUMsU0FBb0IsR0FBRztJQUMzQkMsS0FBSyxFQUFMQSxjQUFLO0lBQ0xDLFFBQVEsRUFBUkEsaUJBQVE7SUFDUkMsSUFBSSxFQUFKQSxhQUFJO0lBQ0pDLElBQUksRUFBSkEsYUFBSTtJQUNKQyxPQUFPLEVBQVBBO0VBQ0YsQ0FBQztFQUVELE1BQU1DLE1BQU0sR0FBRyxJQUFBQyx5QkFBWSxFQUFDO0lBQzFCVCxRQUFRO0lBQ1JFO0VBQ0YsQ0FBQyxDQUFDO0VBRUYsTUFBTVEsSUFBSSxHQUFHLElBQUFDLHVCQUFVLEVBQUM7SUFBRUgsTUFBTTtJQUFFSSxPQUFPLEVBQUU7TUFBRUMsRUFBRSxFQUFGQTtJQUFHO0VBQUUsQ0FBQyxDQUFDO0VBRXBELE1BQU1DLE1BQU0sR0FBRyxJQUFBQyxrQkFBWSxFQUFDTCxJQUFJLENBQUM7RUFFakNJLE1BQU0sQ0FBQ0UsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNO0lBQ3hCQyxPQUFPLENBQUNDLElBQUksQ0FBQyxvREFBb0QsQ0FBQztFQUNwRSxDQUFDLENBQUM7QUFDSjtBQUVBbkIsSUFBSSxDQUFDLENBQUMsQ0FBQ29CLEtBQUssQ0FBRUMsR0FBRyxJQUFLO0VBQ3BCSCxPQUFPLENBQUNJLEtBQUssQ0FBQ0QsR0FBRyxDQUFDO0VBQ2xCRSxPQUFPLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDIn0=